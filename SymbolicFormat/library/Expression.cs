//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace SymbolicCalculator {
	using System;
	using System.Collections;
	
	
	/// <summary>
	/// Abstracts a mathematical expression
	/// </summary>
	/// <remarks>
	/// 	created by - Adam Berger
	/// 	created on - 10/5/2003 3:49:02 PM
	/// </remarks>
	public class Expression : object, IComparable {
		
		// expression in string form
		string expString;
		// depth of expression in tree
		int depth;
		// value of expression
		string expValue;
		
		public Expression( ) {
		}
		
		public string ExpString {
			get {
				return expString;
			}
			set {
				expString = value;
			}
		}
		public int Depth {
			get {
				return depth;
			}
			set {
				depth = value;
			}
		}
		public string ExpValue {
			get {
				return expValue;
			}
			set {
				expValue = value;
			}
		}
		
#region System.IComparable interface implementation
		public int CompareTo(object obj)
		{
			try {
				Expression myObj = (Expression)obj;
				if ( this.Depth > myObj.Depth )
					return 1;
				else if ( this.Depth < myObj.Depth )
					return -1;
				else
					return 0;
			}
			catch( Exception ) {
				return 1;
			}
		}
#endregion
	}
}
