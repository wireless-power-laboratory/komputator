using System;
using AnalyticLibrary.Objects;
using CircuitCalculator.Numbers;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace CircuitCalculatorTests
{
    /// <summary>
    /// Drawn from http://en.wikipedia.org/wiki/Eddy_current and Poynting's solution. 
    /// How about a family time introduction to lay a foundation for later papers?
    /// </summary>
    [TestClass]
    public class PowerDiscTests
    {
        /// <summary>
        /// The source of absorption of electrical energy from the changing magnetic field generated by the circuit, and a conversion element of a key field quantity for power dissipation of Foucault currents.
        /// </summary>
        /// <remarks>Equation from: F. Fiorillo, Measurement and characterization of magnetic materials, Elsevier Academic Press, 2004, ISBN 0-12-257251-3, p. 31.</remarks>
        //[TestMethod]
        //public void PowerDissipationDisc()
        //{
        //    var antenna = new Antenna();
        //    //antenna = antenna.CreateProperties();
        //    //PowerDissipationAtDiscSurface(antenna);
        //}
        //public void PowerDissipationAtDiscSurface(Antenna antenna)
        //{
        //    const double discThickness = 0.003; // In meters
        //    antenna.DiscSurface = new Disc(antenna, antenna.AntennaRadius, discThickness);
        //    var rho = 2.72E-8; // At 25C.
        //    const int k = 1; // For a thin sheet of material.
        //    var numerator = Math.Pow(Math.PI, 2) * Math.Pow(antenna.MagneticFields.B, 2) * Math.Pow(antenna.DiscSurface.Thickness, 2) * Math.Pow(antenna.Resonance.ResonanceFrequency, 2);
        //    var denominator = 6 * k * AnalyticLibrary.Materials.Aluminum.MaterialResistivity * AnalyticLibrary.Materials.Aluminum.MaterialDensityKg;
        //    antenna.DiscSurface.Dissipation = numerator / denominator;// In watts / kg.
        //    //const DimensionalUnitsMass units = DimensionalUnitsMass.g;
        //    //antenna.DiscSurface.Dissipation = ComputeUnits.ComputeUnitsMass(resultWattsKilogram, units); // This number is WAY too large!
        //}
        /// <summary>
        /// The depth at which the B-field will penetrate into the atomic structure.
        /// </summary>
        [TestMethod]
        public void SetSkinDepth(Antenna antenna)
        {
            antenna.SkinDepth = 1 / Math.Sqrt(Math.PI * antenna.Resonance.ResonanceFrequency * Constants.MagneticPermeability * AnalyticLibrary.Materials.Aluminum.MaterialConductivity);
        }
        /// <summary>
        /// The diffusion equation of the dispersement of energy stored in the 
        /// field to that of the atomic structure of the disk is represented by:
        /// </summary>
        [TestMethod]
        public void DiffusionEquation()
        {

        }
        /// <summary>
        /// A discussion in the context of family time given that from one of the black books.
        /// </summary>
        [TestMethod]
        public void FamilyTime()
        {

        }
        /// <summary>
        /// The power in the form of available energy for transfer to a neural system 
        /// stored on the disk is:
        /// </summary>
        [TestMethod]
        public void PowerStoredOnDiskSurface()
        {
            // First solve given Poynting's solution of the diffusion equation using Charlie's and Ulrich's papers.

        }
    }
}
